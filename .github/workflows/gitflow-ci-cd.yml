# API Testing for 3 Specific Endpoints
name: "API Testing - Simple"

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    # B∆∞·ªõc 1: L·∫•y code t·ª´ repository v·ªÅ
    - name: Checkout Code ‚öôÔ∏è
      uses: actions/checkout@v4

    # B∆∞·ªõc 2: T·∫°o file .env t·ª´ template v√† secrets
    - name: Create Laravel .env file üîß
      env:
        APP_KEY: ${{ secrets.APP_KEY }}
        DB_DATABASE: ${{ secrets.DB_DATABASE }}
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
      run: |
        echo "üîß Creating Laravel .env file from .env.ci template..."
        # L·ªánh envsubst s·∫Ω ƒë·ªçc file .env.ci, t√¨m c√°c bi·∫øn $VAR v√† thay b·∫±ng gi√° tr·ªã t·ª´ secrets
        envsubst < sprint5-with-bugs/API/.env.ci > sprint5-with-bugs/API/.env
        echo "‚úÖ .env file created successfully."

    # B∆∞·ªõc 3: Kh·ªüi ƒë·ªông c√°c container Docker
    - name: Start Docker Containers üê≥
      run: docker compose up -d

    # B∆∞·ªõc 4: Ch·ªù c√°c d·ªãch v·ª• s·∫µn s√†ng
    - name: Wait for Services ‚è≥
      run: sleep 60
      shell: bash

    # B∆∞·ªõc 5: C√†i ƒë·∫∑t c√°c th∆∞ vi·ªán v√† thi·∫øt l·∫≠p ·ª©ng d·ª•ng
    - name: Setup Application üîß
      run: |
        echo "üì¶ Installing Composer dependencies..."
        docker compose run --rm composer
        
        echo "üîí Fixing permissions..."
        docker compose exec -T -u root laravel-api chown -R www-data:www-data /var/www/storage /var/www/bootstrap/cache
        
        echo "üóÑÔ∏è Running database migrations and seeding..."
        docker compose exec -T laravel-api php artisan migrate:fresh --seed --force

    # B∆∞·ªõc 6: C√†i ƒë·∫∑t Node.js v√† Newman
    - name: Install Node.js & Newman ‚öôÔ∏è
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    - run: npm install -g newman newman-reporter-htmlextra newman-reporter-html

    # B∆∞·ªõc 7: T·∫°o th∆∞ m·ª•c reports v√† d·ªçn d·∫πp files c≈©
    - name: Create & Clean Reports Directory üìÅ
      run: |
        rm -rf reports/
        mkdir -p reports

    # B∆∞·ªõc 8.1: Test GET /products - Data-driven testing with 28 test cases
    - name: Run Products API Tests üì¶
      run: |
        echo "üß™ Testing GET /products (Data-Driven - 28 test cases)..."
        newman run ./tests/collections/products-data-driven-collection.json \
          --environment ./tests/collections/environment.json \
          --iteration-data ./tests/data/products-test-data.csv \
          --reporters html,htmlextra \
          --reporter-html-export reports/products-basic-report.html \
          --reporter-htmlextra-export reports/products-detailed-report.html \
          --reporter-htmlextra-title "Products API Data-Driven Test Report (Detailed)" \
          --suppress-exit-code
    
    # B∆∞·ªõc 8.2: Test POST /messages - Data-driven testing with 25 test cases
    - name: Run Messages API Tests üìß
      run: |
        echo "üìß Testing POST /messages (Data-Driven - 25 test cases)..."
        newman run ./tests/collections/messages-data-driven-collection.json \
          --environment ./tests/collections/environment.json \
          --iteration-data ./tests/data/messages-test-data.csv \
          --reporters html,htmlextra \
          --reporter-html-export reports/messages-basic-report.html \
          --reporter-htmlextra-export reports/messages-detailed-report.html \
          --reporter-htmlextra-title "Messages API Data-Driven Test Report (Detailed)" \
          --suppress-exit-code

    # B∆∞·ªõc 8.3: Test GET /categories/tree - Data-driven testing with 28 test cases
    - name: Run Categories API Tests üìÇ
      run: |
        echo "üìÇ Testing GET /categories/tree (Data-Driven - 28 test cases)..."
        newman run ./tests/collections/categories-tree-data-driven-collection.json \
          --environment ./tests/collections/environment.json \
          --iteration-data ./tests/data/categories-tree-test-data.csv \
          --reporters html,htmlextra \
          --reporter-html-export reports/categories-basic-report.html \
          --reporter-htmlextra-export reports/categories-detailed-report.html \
          --reporter-htmlextra-title "Categories Tree API Data-Driven Test Report (Detailed)" \
          --suppress-exit-code

    # B∆∞·ªõc 9: Ki·ªÉm tra files ƒë∆∞·ª£c t·∫°o
    - name: Verify Generated Reports üîç
      if: always()
      run: |
        echo "üìÅ Checking generated files in reports/ directory:"
        ls -la reports/
        echo ""
        echo "üìä Expected files (should be exactly 6 HTML files):"
        echo "Basic Reports:"
        echo "1. products-basic-report.html"
        echo "2. messages-basic-report.html" 
        echo "3. categories-basic-report.html"
        echo "Detailed Reports:"
        echo "4. products-detailed-report.html"
        echo "5. messages-detailed-report.html"
        echo "6. categories-detailed-report.html"
        echo ""
        FILE_COUNT=$(ls -1 reports/*.html 2>/dev/null | wc -l)
        echo "üî¢ Total HTML files found: $FILE_COUNT"
        if [ "$FILE_COUNT" -ne 6 ]; then
          echo "‚ö†Ô∏è WARNING: Expected 6 HTML files, but found $FILE_COUNT"
        else
          echo "‚úÖ SUCCESS: Found exactly 6 HTML report files (3 basic + 3 detailed)"
        fi

    # B∆∞·ªõc 10: T·ªïng k·∫øt k·∫øt qu·∫£ test
    - name: Test Summary üìä
      if: always()
      run: |
        echo "üìã API Testing Summary - Data-Driven Testing Results:"
        echo "- Products API: GET /products (28 comprehensive test scenarios)"
        echo "- Messages API: POST /messages (25 validation & security test scenarios)" 
        echo "- Categories Tree API: GET /categories/tree (28 hierarchy & filtering scenarios)"
        echo "- Total: 81 data-driven test cases covering all edge cases"
        echo ""
        echo "üìä HTML Reports generated in reports/ directory:"
        echo "Basic Reports (Newman HTML):"
        echo "- products-basic-report.html"
        echo "- messages-basic-report.html"
        echo "- categories-basic-report.html"
        echo ""
        echo "Detailed Reports (Newman HTML Extra):"
        echo "- products-detailed-report.html"
        echo "- messages-detailed-report.html"
        echo "- categories-detailed-report.html"

    # B∆∞·ªõc 11: Upload ch·ªâ HTML reports
    - name: Upload Test Reports üìä
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: newman-test-reports-data-driven
        path: reports/*.html
        retention-days: 30

    # B∆∞·ªõc 12: D·ªçn d·∫πp
    - name: Cleanup üßπ
      if: always()
      run: docker compose down -v
