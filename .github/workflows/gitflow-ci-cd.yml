# API Testing for 3 Specific Endpoints
name: "API Testing - Simple"

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    # Bước 1: Lấy code từ repository về
    - name: Checkout Code ⚙️
      uses: actions/checkout@v4

    # Bước 2: Tạo file .env từ template và secrets
    - name: Create Laravel .env file 🔧
      env:
        APP_KEY: ${{ secrets.APP_KEY }}
        DB_DATABASE: ${{ secrets.DB_DATABASE }}
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
      run: |
        echo "🔧 Creating Laravel .env file from .env.ci template..."
        # Lệnh envsubst sẽ đọc file .env.ci, tìm các biến $VAR và thay bằng giá trị từ secrets
        envsubst < sprint5-with-bugs/API/.env.ci > sprint5-with-bugs/API/.env
        echo "✅ .env file created successfully."

    # Bước 3: Khởi động các container Docker
    - name: Start Docker Containers 🐳
      run: docker compose up -d

    # Bước 4: Chờ các dịch vụ sẵn sàng
    - name: Wait for Services ⏳
      run: sleep 60
      shell: bash

    # Bước 5: Cài đặt các thư viện và thiết lập ứng dụng
    - name: Setup Application 🔧
      run: |
        echo "📦 Installing Composer dependencies..."
        docker compose run --rm composer
        
        echo "🔒 Fixing permissions..."
        docker compose exec -T -u root laravel-api chown -R www-data:www-data /var/www/storage /var/www/bootstrap/cache
        
        echo "🗄️ Running database migrations and seeding..."
        docker compose exec -T laravel-api php artisan migrate:fresh --seed --force

    # Bước 6: Cài đặt Node.js và Newman
    - name: Install Node.js & Newman ⚙️
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    - run: npm install -g newman newman-reporter-htmlextra

    # Bước 7: Tạo thư mục reports
    - name: Create Reports Directory 📁
      run: mkdir -p reports

    # Bước 8.1: Test GET /products - Data-driven testing with 28 test cases
    - name: Run Products API Tests 📦
      run: |
        echo "🧪 Testing GET /products (Data-Driven - 28 test cases)..."
        newman run ./tests/collections/products-data-driven-collection.json \
          --environment ./tests/collections/environment.json \
          --iteration-data ./tests/data/products-test-data.csv \
          --reporters cli,htmlextra \
          --reporter-htmlextra-export reports/products-data-driven-report.html \
          --reporter-htmlextra-title "Products API Data-Driven Test Report"
    
    # Bước 8.2: Test POST /messages - Data-driven testing with 25 test cases
    - name: Run Messages API Tests 📧
      run: |
        echo "📧 Testing POST /messages (Data-Driven - 25 test cases)..."
        newman run ./tests/collections/messages-data-driven-collection.json \
          --environment ./tests/collections/environment.json \
          --iteration-data ./tests/data/messages-test-data.csv \
          --reporters cli,htmlextra \
          --reporter-htmlextra-export reports/messages-data-driven-report.html \
          --reporter-htmlextra-title "Messages API Data-Driven Test Report"

    # Bước 8.3: Test GET /categories/tree - Data-driven testing with 28 test cases
    - name: Run Categories API Tests 📂
      run: |
        echo "📂 Testing GET /categories/tree (Data-Driven - 28 test cases)..."
        newman run ./tests/collections/categories-tree-data-driven-collection.json \
          --environment ./tests/collections/environment.json \
          --iteration-data ./tests/data/categories-tree-test-data.csv \
          --reporters cli,htmlextra \
          --reporter-htmlextra-export reports/categories-tree-data-driven-report.html \
          --reporter-htmlextra-title "Categories Tree API Data-Driven Test Report"

    # Bước 9: Tổng kết kết quả test
    - name: Test Summary 📊
      if: always()
      run: |
        echo "📋 API Testing Summary - Data-Driven Testing Results:"
        echo "- Products API: GET /products (28 comprehensive test scenarios)"
        echo "- Messages API: POST /messages (25 validation & security test scenarios)" 
        echo "- Categories Tree API: GET /categories/tree (28 hierarchy & filtering scenarios)"
        echo "- Total: 81 data-driven test cases covering all edge cases"
        echo ""
        echo "📊 HTML Reports generated in reports/ directory:"
        echo "- products-data-driven-report.html"
        echo "- messages-data-driven-report.html"
        echo "- categories-tree-data-driven-report.html"

    # Bước 10: Upload báo cáo HTML
    - name: Upload Test Reports 📊
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: newman-test-reports-data-driven
        path: reports/
        retention-days: 30

    # Bước 11: Dọn dẹp
    - name: Cleanup 🧹
      if: always()
      run: docker compose down -v
