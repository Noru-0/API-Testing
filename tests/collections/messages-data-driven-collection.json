{
  "info": {
    "name": "Messages API Tests",
    "description": "Simple API tests for Contact Messages endpoint",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "item": [
    {
      "name": "POST /messages - Test",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const expectedStatus = parseInt(pm.iterationData.get('expected_status'));",
              "const description = pm.iterationData.get('test_description');",
              "",
              "pm.test(`${description} - Status Code`, function () {",
              "    pm.expect(pm.response.code).to.equal(expectedStatus);",
              "});",
              "",
              "pm.test(`${description} - Response Time`, function () {",
              "    pm.expect(pm.response.responseTime).to.be.below(5000);",
              "});",
              "",
              "pm.test(`${description} - Content Type`, function () {",
              "    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
              "});",
              "",
              "if (expectedStatus === 200) {",
              "    pm.test(`${description} - Response Structure`, function () {",
              "        const json = pm.response.json();",
              "        pm.expect(json).to.have.property('id');",
              "        pm.expect(json).to.have.property('name');",
              "        pm.expect(json).to.have.property('email');",
              "    });",
              "} else if (expectedStatus === 422) {",
              "    pm.test(`${description} - Validation Error`, function () {",
              "        const json = pm.response.json();",
              "        pm.expect(json).to.be.an('object');",
              "        // Check for validation error fields (name, email, subject, message)",
              "        const hasValidationFields = json.hasOwnProperty('name') || ",
              "                                   json.hasOwnProperty('email') || ",
              "                                   json.hasOwnProperty('subject') || ",
              "                                   json.hasOwnProperty('message');",
              "        pm.expect(hasValidationFields).to.be.true;",
              "    });",
              "}"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {"key": "Accept", "value": "application/json"},
          {"key": "Content-Type", "value": "application/json"}
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"{{name}}\",\n  \"email\": \"{{email}}\",\n  \"subject\": \"{{subject}}\",\n  \"message\": \"{{message}}\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/messages",
          "host": ["{{base_url}}"],
          "path": ["messages"]
        }
      }
    }
  ]
}
